name: Build and Deploy Backend on EC2

on:
  push:
    branches:
      - main
    # The workflow should trigger only on changes in the "backend" folder
    # paths:
    #   - "backend/**"

jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest
    # run all the steps in the backend directory
    defaults:
      run:
        working-directory: ./backend

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: cloudtracker
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout the Code
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Seed PostgreSQL Database
        env:
          DB_CONNECTION_STRING: "postgresql://postgres:password@localhost:5432/cloudtracker"
        run: npm run seed

      - name: Test Backend
        env:
          DB_CONNECTION_STRING: "postgresql://postgres:password@localhost:5432/cloudtracker"
          DB_SSL: "false"
        run: npm run test

      - name: Build Backend
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_EC2 }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_EC2 }}
          aws-region: eu-west-2

      - name: Run an AWS SSM Send Command Script on EC2
        env:
          INSTANCE_ID: ${{ secrets.INSTANCE_ID_EC2 }}
          DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
          DB_SSL: "true"
        # ssm requires a policy on the ec2 instance
        # make a Role with AmazonSSMManagedInstanceCore
        # go to the EC2 Instance, Actions, Security, Modify IAM Role and apply it
        run: |
          aws ssm send-command \
            --instance-ids ${{ secrets.INSTANCE_ID_EC2 }} \
            --document-name "AWS-RunShellScript" \
            --execution-role-name "CloudTracker-Role-EC2-SSM" \
            --parameters "commands=[whoami],workingDirectory=['/home/ec2-user/']"
