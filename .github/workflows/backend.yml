name: Build and Deploy Backend on EC2

on:
  push:
    branches:
      - main
    # The workflow should trigger only on changes in the "backend" folder
    # paths:
    #   - "backend/**"

jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest

    # run all the steps in the backend directory
    # defaults:
    #   run:
    #     working-directory: ./backend

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: cloudtracker
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout the Code
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: |
          cd backend
          npm ci

      - name: Seed PostgreSQL Database
        run: |
          cd backend
          npm run seed
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: cloudtracker

      - name: Test Backend
        env:
          # DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
          # cannot connect to postgresql on aws rds because only the ec2 instance can access it internally
          # so we need to make a temporary postgresql database on github actions
          DB_CONNECTION_STRING: "postgresql://postgres:password@localhost:5432/cloudtracker"
        run: |
          cd backend 
          npm run test

      - name: Build Backend
        run: |
          cd backend 
          npm run build

      - name: EC2 SSH > Delete the PM2 process > Delete the /cloudtracker/ folder
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            pm2 list | grep -q "cloudtrackerapi" && pm2 delete all || true &&
            rm -rf cloudtracker

      # - name: Check the contents of working directory (debug)
      #   run: ls -la

      - name: EC2 SCP > Copy /backend/dist to /cloudtracker/backend/dist
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "backend/*"
          target: "cloudtracker/"

      - name: EC2 SSH > Start PM2 process (with injected db connection string)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            DB_CONNECTION_STRING="${{ secrets.DB_CONNECTION_STRING }}" pm2 start "cloudtracker/backend/dist/index.js" --name cloudtrackerapi
